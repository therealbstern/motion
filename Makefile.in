CC      = @CC@

# Install locations, controlled by setting configure flags.
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
mandir      = @mandir@
sysconfdir  = @sysconfdir@
datadir     = @datadir@
datarootdir = @datarootdir@
docdir      = $(datadir)/doc/@PACKAGE_NAME@-@PACKAGE_VERSION@ 
examplesdir = $(datadir)/@PACKAGE_NAME@-@PACKAGE_VERSION@/examples

# These variables contain compiler flags, object files to build and files to
# install.
CFLAGS       = @CFLAGS@ -Wall -DVERSION=\"@PACKAGE_VERSION@\" -Dsysconfdir=\"$(sysconfdir)\" -DHAVE_MMAL -I/opt/vc/include -DARM_OPTIMISATIONS
LDFLAGS      = @LDFLAGS@ -L/opt/vc/lib
LIBS         = @LIBS@ -lrt -lbcm_host -lvcos -lvchiq_arm -lmmal_core \
	       -lmmal_util -lmmal_vc_client
FFMPEG_OBJ   = @FFMPEG_OBJ@
FFMPEG_SRC   = $(FFMPEG_OBJ:.o=.c)
VIDEO_OBJ    = @VIDEO@
VIDEO_SRC    = $(VIDEO_OBJ:.o=.c)
SDL_OBJ      = @SDL_OBJ@
SDL_SRC      = $(SDL_OBJ:.o=.c)
MOTION_OBJ   = alg.o conf.o draw.o event.o filecam.o jpegutils.o logger.o \
	       md5.o metrics.o mmalcam.o mmaloutput.o motion.o netcam.o \
	       netcam_ftp.o netcam_jpeg.o netcam_rtsp.o netcam_wget.o \
	       picture.o rotate.o stream.o track.o utils.o videosourceplugin.o \
	       vloopback_motion.o webhttpd.o \
	       raspicam/RaspiCLI.o raspicam/RaspiCamControl.o
MOTION_SRC   = $(MOTION_OBJ:.o=.c)
OBJ          = $(FFMPEG_OBJ) $(SDL_OBJ) $(VIDEO_OBJ) $(MOTION_OBJ) alg_arm.o
SRC          = $(FFMPEG_SRC) $(SDL_SRC) $(VIDEO_SRC) $(MOTION_SRC) alg_arm.s
DOC          = CHANGELOG COPYING CREDITS INSTALL README motion_guide.html
EXAMPLES     = *.conf motion.init-Debian motion.init-Fedora motion.init-FreeBSD.sh

.PHONY: all help uninstall clean dist distclean updateguide

all: motion

motion: $(OBJ)
	$(CC) $(LDFLAGS) -o $@ $(OBJ) $(LIBS)

#%.o: %.c
#	$(CC) -c $(CFLAGS) $< -o $@

# Include the dependency file if it exists.
ifeq ($(DEPEND_FILE), $(wildcard $(DEPEND_FILE)))
ifeq (,$(findstring clean,$(MAKECMDGOALS)))
-include $(DEPEND_FILE)
endif
endif

# Make the dependency file depend on all header files and all relevant source
# files. This forces the file to be re-generated if the source/header files
# change. Note, however, that the existing version will be included before
# re-generation.
depend: *.h $(SRC)
	$(CC) $(CFLAGS) -M $(SRC) > $@

help:
	@echo "make                   Build motion from local copy in your computer"	
	@echo "make current           Build last version of motion from svn"
	@echo "make dev               Build motion with dev flags"
	@echo "make dev-git           Build motion with dev flags for git"
	@echo "make build-commit      Build last version of motion and prepare to commit to svn"
	@echo "make build-commit-git  Build last version of motion and prepare to commit to git"
	@echo "make clean             Clean objects" 
	@echo "make distclean         Clean everything"	
	@echo "make install           Install binary , examples , docs and config files"
	@echo "make uninstall         Uninstall all installed files"
	@echo "make updateguide       Download the latest version of the Motion Guide"

install:
	install -d -m 0755 $(DESTDIR)$(bindir)
	install -d -m 0755 $(DESTDIR)$(mandir)/man1
	install -d -m 0755 $(DESTDIR)$(sysconfdir)
	install -d -m 0755 $(DESTDIR)$(docdir)
	install -d -m 0755 $(DESTDIR)$(examplesdir)
	install -m 0644 motion.1 $(DESTDIR)$(mandir)/man1
	install -m 0644 $(DOC) $(DESTDIR)$(docdir)
	install -m 0644 $(EXAMPLES) $(DESTDIR)$(examplesdir)
	install -m 0644 motion-dist.conf $(DESTDIR)$(sysconfdir)
	for prog in $(PROGS); do \
		(install -m 0755 $$prog $(DESTDIR)$(bindir) ); \
	done
	@echo
	@echo "Install complete! The default configuration file, motion-dist.conf, has been"
	@echo "installed to $(sysconfdir). You need to rename/copy it to $(sysconfdir)/motion.conf"
	@echo "for Motion to find it. More configuration examples as well as init scripts"
	@echo "can be found in $(examplesdir)."

uninstall:
	for prog in $(PROGS); do \
		($ rm -f $(bindir)/$$prog ); \
	done
	rm -f $(mandir)/man1/motion.1
	rm -f $(sysconfdir)/motion-dist.conf
	rm -rf $(docdir)
	rm -rf $(examplesdir)

# CLEAN is basic cleaning; removes object files and executables, but does not
# remove files generated from the configure step.

clean:
	rm -f *~ *.jpg *.o motion combine depend

# DIST restores the directory to distribution state.
dist: distclean updateguide
	find . -type f -exec chmod 0644 '{}' \\;
	chmod 0755 configure
	chmod 0755 version.sh

# DISTCLEAN removes all files generated during the configure step in addition
# to basic cleaning.
distclean: clean
	rm -f config.status config.log config.cache Makefile motion.init-Fedora motion.init-Debian motion.init-FreeBSD.sh
	rm -f thread1.conf thread2.conf thread3.conf thread4.conf motion-dist.conf motion-help.conf motion.spec
	rm -rf autom4te.cache config.h

# UPDATEGUIDE downloads the Motion Guide from TWiki.
updateguide:
	wget http://www.lavrsen.dk/twiki/bin/view/Motion/MotionGuideOneLargeDocument?skin=text -O motion_guide.html
	sed -i -e 's/\?skin=text//g;s,"/twiki/,"http://www.lavrsen.dk/twiki/,g' motion_guide.html
